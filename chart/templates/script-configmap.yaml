{{- $context := merge (dict "component" "keystore-script") . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ssc.fullcomponentname" $context }}
  labels:
    app.kubernetes.io/component: keystore
    app.kubernetes.io/instance: fortify
    app.kubernetes.io/managed-by: flux
    app.kubernetes.io/name: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Values.image.tag | quote }}
data:
  gen.sh: |
    #!/bin/sh
    ls -la /secrets/
    export KEY_PASSWORD=$(cat /secrets/ssc-service.jks.key.password)
    export KEYSTORE_PASSWORD=$(cat /secrets/ssc-service.jks.password)
    export TRUSTSTORE_PASSWORD=$(cat /secrets/truststore.password)
    
    openssl req -newkey rsa:4096 -nodes -keyout /tmp/key.pem -x509 -days 365 -out /tmp/certificate.pem -subj "/CN={{ .Values.urlHost }}"
    openssl pkcs12 -export -name {{ .Values.default_cert_alias }} -in /tmp/certificate.pem -inkey /tmp/key.pem -out /tmp/{{ .Values.secretRef.keys.httpCertificateKeystoreFileEntry }} -password pass:${KEYSTORE_PASSWORD}
    
    cp /tmp/{{ .Values.secretRef.keys.httpCertificateKeystoreFileEntry }}  /shared/{{ .Values.secretRef.keys.httpCertificateKeystoreFileEntry }}  

    cp /secrets/* /shared/
    ls -lah /shared

    # Debug logging to show the autoconfig being used
    cat /shared/ssc.autoconfig

    # adding to give time for mysql to startup
    echo "sleeping to give mysql time to start as init containers do no have network access to validate connection....."
    sleep 60
