---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: webapp
    app.kubernetes.io/instance: fortify
    app.kubernetes.io/managed-by: flux
    app.kubernetes.io/name: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Values.image.tag | quote }}
  name: fortify-fortify-ssc-webapp
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: webapp
      app.kubernetes.io/instance: fortify
      app.kubernetes.io/name: {{ .Release.Name | quote }}
  serviceName: webapp
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webapp
        app.kubernetes.io/instance: fortify
        app.kubernetes.io/name: {{ .Release.Name | quote }}
    spec:
      containers:
      - env:
        - name: CATALINA_OPTS
          value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=86.0
        - name: JDBC_DRIVER_URI
          value: {{ .Values.jdbc_driver }}
        - name: HTTP_SERVER_CERTIFICATE_VERIFICATION
          value: none
        - name: COM_FORTIFY_SSC_LICENSEPATH
          value: {{ .Values.license_path }}
        - name: COM_FORTIFY_SSC_AUTOCONFIGPATH
          value: {{ .Values.auto_config }}
        - name: HTTP_SERVER_CERTIFICATE_KEYSTORE_FILE
          value: {{ .Values.http_server_certificate_keystore_file }}
        - name: HTTP_SERVER_CERTIFICATE_KEYSTORE_PASSWORD_FILE
          value: {{ .Values.http_server_certificate_keystore_password }}
        - name: HTTP_SERVER_CERTIFICATE_KEY_PASSWORD_FILE
          value: {{ .Values.https_server_certificate_key_password }}
        - name: COM_FORTIFY_SSC_ENFORCESECURETRANSPORT
          value: "false"
        - name: HTTP_SERVER_CERTIFICATE_KEY_ALIAS
          value: {{ .Values.http_server_cert_alias }}
        - name: HOST_URL
          value: "https://{{ .Values.hostname }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        name: webapp
        ports:
        - containerPort: {{ .Values.port.http | default 8080 }}
          name: http-web
          protocol: TCP
        - containerPort:  {{ .Values.port.https | default 8443 }}
          name: https-web
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Host
              value: fortify-service
            path: /images/favicon.ico
            port: https-web
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
        resources:
            {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - mountPath: /app/secrets
          name: secrets-volume
          readOnly: true
        - mountPath: /fortify
          name: persistent-volume
        - mountPath: /app/tomcat/conf/server-tpl.xml
          name: tomcat-config
          subPath: server-tpl.xml
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecrets }}
      initContainers:
      - command:
        - /bin/bash
        - -ecv
        - |
          DB=""
          while [ "$DB" != "fortify_completed" ]; do
            echo "going for 5 sec sleep"
            sleep 5
            DB=$(mysql -h $DBHOST -u $DBUSER -p$DBPASSWORD -e "SHOW DATABASES" | grep fortify_completed)
          done
          echo "Fortify Validation Database found"
        envFrom:
        - secretRef:
            name: db-credentials-mysql
        image: "{{ .Values.initContainer.image }}:{{ .Values.initContainer.tag }}"
        name: seed-data-loader
      volumes:
      - name: secrets-volume
        secret:
          secretName: {{ .Chart.Name }}-secret
      - name: persistent-volume
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-pvc
      - configMap:
          name: tomcat-config
        name: tomcat-config
